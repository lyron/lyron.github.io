<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>问尘’s Note</title>
  
  
  <link href="https://lyron.github.io/atom.xml" rel="self"/>
  
  <link href="https://lyron.github.io/"/>
  <updated>2024-06-17T07:36:55.165Z</updated>
  <id>https://lyron.github.io/</id>
  
  <author>
    <name>问尘</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大模型应用之&#39;COT(思维链)&#39;</title>
    <link href="https://lyron.github.io/2024/06/11/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8%E4%B9%8B-%E6%80%9D%E7%BB%B4%E9%93%BE/"/>
    <id>https://lyron.github.io/2024/06/11/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8%E4%B9%8B-%E6%80%9D%E7%BB%B4%E9%93%BE/</id>
    <published>2024-06-11T11:45:29.000Z</published>
    <updated>2024-06-17T07:36:55.165Z</updated>
    
    <content type="html"><![CDATA[<h3 id="思维链定义"><a href="#思维链定义" class="headerlink" title="思维链定义"></a>思维链定义</h3><p>思维链（Chain of Thought, CoT）是一种大模型的应用技术，用于帮助模型在 <em>「解决复杂任务时将推理过程分成多个步骤，从而提高其准确性和解释性。」</em> 思维链通过在生成答案时明确地模拟人类思维过程，使模型 <em>「能够更有效地处理多步骤问题。」</em><br>以下是思维链的详细介绍：</p><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h3><p>思维链核心思想是：</p><ul><li>分步推理：将复杂问题分解为多个可管理的小步骤，每一步都是前一步的逻辑延续。</li><li>中间状态：在每个步骤中生成中间结果，这些中间结果为最终解答提供支持。</li><li>解释性：每一步的推理过程都是透明的，方便追溯和调整。</li></ul><h3 id="2-如何实现思维链"><a href="#2-如何实现思维链" class="headerlink" title="2. 如何实现思维链"></a>2. 如何实现思维链</h3><p>如上述逻辑，在实际的应用过程中，思维链一般涉及以下几个步骤：</p><ul><li><p>a. 问题分解<br>将一个复杂的问题分解为子问题。例如，在解决一道数学题时，可以将问题分解为多个计算步骤。</p><blockquote><p>在更高级的使用方式中，这一步也可以由大模型胜任（我们一般称之为策划），并在历史的实践经验中发现效果不错。其中针对不同场景也有一些不同的策划模式后续单独开文。</p></blockquote></li><li><p>b. 生成中间步骤<br>在每个子步骤中，模型生成一个中间状态。这些中间状态通过自然语言描述出来，使其易于理解和调试。例如面对用户询问问题“我买这款保险产品合适吗”，模拟一个简单的销售思维：</p><ul><li>步骤1：回答用户的问题，能或者不能</li><li>步骤2：判断用户情况是否有更适合的产品</li><li>步骤3：根据步骤2，如果有更适合的产品则生成对应的区别与建议</li></ul></li><li><p>c. 汇总结果<br>最后，模型将所有中间步骤的结果汇总，形成最终的答案。</p></li></ul><h3 id="3-应用场景"><a href="#3-应用场景" class="headerlink" title="3. 应用场景"></a>3. 应用场景</h3><p>思维链适用于多种应用场景，尤其适合需要分步推理的复杂任务：</p><ul><li>数学推理：解决数学问题时，通过多个步骤逐渐逼近答案。</li><li>逻辑推理：在进行逻辑分析时，通过逐步构建逻辑关系来得出结论。</li><li>编程任务：编写代码时，分解问题以逐步实现功能。</li><li>自然语言理解：在文本分析和理解任务中，通过分层次理解文本内容来得出结论。</li></ul><blockquote><p>什么情况下是需要用到COT的呢？举个例子，现在普通的客服对话机器人相对简单，最简单的是剧本式的、现在比较流行的是RAG类型的，这种情况一般我们只需要关注用户Query并对对应的答案检索生成即可，但如果我们让这个客服机器人做销售就会更困难，因为销售是水无常势的影响因素非常多:不同的用户「需求不同/基础认知不同/对产品的关注点不同」;不同的销售人员「擅长的知识点不同、销售目的不同」都会影响销售话题的探讨顺序、探讨范围、探讨深度，有的销售就习惯把品讲透、有的人则是喜欢从购买必要性上做理念植入以此博得出单，在这种情形下我们就可以把Top Sales的销售思路学习下来帮助大模型拆解一个复杂的销售课题，决定什么时候做什么事来提升大模型最后的回答效果。(我会单独起一篇文章来讲如何构建一个销售智能体)</p></blockquote><h3 id="4-优势"><a href="#4-优势" class="headerlink" title="4. 优势"></a>4. 优势</h3><p>提高准确性：分步进行推理可以降低复杂性，减少错误率。<br>增强透明性：每一步生成的中间状态使得推理过程更透明，有助于调试和解释。<br>可拓展性强：该方法可以适应多种任务，通过调整分步策略来应对不同类型的问题。</p><h3 id="5-示例"><a href="#5-示例" class="headerlink" title="5. 示例"></a>5. 示例</h3><p>为了方便理解，先以解决一个简单的数学问题为例：</p><p>问题：23 + 19 是多少？</p><p>使用思维链方法，模型可能会生成以下推理过程：</p><p>第一步：将23分解为20 + 3。<br>第二步：将19分解为10 + 9。<br>第三步：将20和10相加得30。<br>第四步：将3和9相加得12。<br>第五步：将30和12相加得42。<br>最终答案：42。<br>通过分步推理，模型不仅得出了正确答案，还详细展示了每一步的计算过程，提高了结果的解释性。</p><h3 id="6-未来发展"><a href="#6-未来发展" class="headerlink" title="6. 未来发展"></a>6. 未来发展</h3><p>解决复杂问题现在有两种思路:</p><ul><li>做数据的信徒，通过大量的数据+强力的模型基座+强大的算力， 做到“端到端”的问题解答。这个思路和大模型的诞生的思路是相似的，真做到的情况下基本上可以把专业领域的解决问题的能力做到现在的GP4闲聊一样的水平，但成本、数据量、数据质量要求都极高。</li><li>以COT的方式，结合专家经验与大模型的理解、表达能力，更快的达到我们想要的结果。这应该是大部分对盈利有压力的公司会选择的方式，即能不脱离业务的理解又能对实际业务效率和效果带来提升。ps:COT方式最大的问题是专家经验的标准化、数据获取的标注成本&amp;效率。现在也有成体系的方法来解决这些自动化样本获取，另起文章详细来谈</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;思维链定义&quot;&gt;&lt;a href=&quot;#思维链定义&quot; class=&quot;headerlink&quot; title=&quot;思维链定义&quot;&gt;&lt;/a&gt;思维链定义&lt;/h3&gt;&lt;p&gt;思维链（Chain of Thought, CoT）是一种大模型的应用技术，用于帮助模型在 &lt;em&gt;「解决复杂任务时</summary>
      
    
    
    
    
    <category term="大模型应用" scheme="https://lyron.github.io/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8/"/>
    
    <category term="大模型基础" scheme="https://lyron.github.io/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>问尘重启之旅</title>
    <link href="https://lyron.github.io/2024/06/05/%E9%97%AE%E5%B0%98%E9%87%8D%E5%90%AF%E4%B9%8B%E6%97%85/"/>
    <id>https://lyron.github.io/2024/06/05/%E9%97%AE%E5%B0%98%E9%87%8D%E5%90%AF%E4%B9%8B%E6%97%85/</id>
    <published>2024-06-05T08:08:09.000Z</published>
    <updated>2024-06-05T08:09:38.536Z</updated>
    
    <content type="html"><![CDATA[<p>从这篇文章开始，开始重新经营blog，记录大模型相关使用知识、记录生活~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;从这篇文章开始，开始重新经营blog，记录大模型相关使用知识、记录生活~&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lyron.github.io/2019/12/20/hello-world/"/>
    <id>https://lyron.github.io/2019/12/20/hello-world/</id>
    <published>2019-12-19T16:21:50.000Z</published>
    <updated>2019-12-19T16:21:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.</summary>
      
    
    
    
    <category term="testcg" scheme="https://lyron.github.io/categories/testcg/"/>
    
    
    <category term="test" scheme="https://lyron.github.io/tags/test/"/>
    
  </entry>
  
</feed>
